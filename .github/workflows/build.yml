name: build

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install nasm
        if: matrix.os == 'windows-latest'
        run: choco install -y nasm
      - name: Install nmake
        if: matrix.os == 'windows-latest'
        run: |
          & "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vs_installer.exe" modify `
           --installPath "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise" `
           --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --passive --norestart
        shell: powershell
      - name: Build OpenSSL
        env:
          CIBW_BEFORE_BUILD: scripts/build-openssl /tmp/vendor
          CIBW_BEFORE_BUILD_WINDOWS: scripts\build-openssl.bat C:\cibw\vendor
          CIBW_BUILD: cp38-*
          CIBW_ENVIRONMENT_MACOS: CFLAGS=-mmacosx-version-min=10.9
          CIBW_TEST_COMMAND: python -c "import dummy"
        run: |
          pip install cibuildwheel
          cibuildwheel --output-dir output
          rm output/*.whl
      - name: Upload OpenSSL
        uses: actions/upload-artifact@v1
        with:
          name: output
          path: output/
